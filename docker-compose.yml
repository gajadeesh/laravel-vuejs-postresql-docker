version: '3.8'

services:

# NGINX SETUP
  nginx:
    image: nginx:stable-alpine
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_nginx
    ports:
        - "8000:8000"
        - "3000:3000"
    restart: unless-stopped
    tty: true
    volumes:
        - ./.docker/config/default.conf:/etc/nginx/conf.d/default.conf
    environment: 
        - CHOKIDAR_USEPOLLING=true
    depends_on: 
        - php
        - postgres
    networks:
        - app

#PHP SETUP
  php:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ${APP_NAME}_php
    volumes:
      - ./server:/var/www/html/server
      - ./.docker/config/default.conf:/etc/apache2/sites-enabled/000-default.conf
    ports:
      - '9001:9000'
    depends_on:
      - postgres

    networks:
      - app


  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=pgadmin4@pgadmin.org
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - 5050:80
    restart: always
    volumes:
      - ./.docker/pgadmin:/root/.pgadmin

    depends_on:
      - postgres

    networks:
      - app

 
  postgres:

    image: postgres:12.3-alpine

    container_name: ${APP_NAME}_postgres

    restart: unless-stopped

    ports: 
     - "5433:5432"

    volumes:
      - ./.docker/postgres:/val/lib/postgresql/data

    environment:
      
      POSTGRES_USER: ${DB_USERNAME}

      POSTGRES_PASSWORD: ${DB_PASSWORD}

      POSTGRES_DB: ${DB_DATABASE}

      POSTGRES_HOST_AUTH_METHOD: "trust"

    networks:
      - app

networks:
  app:
    driver: bridge